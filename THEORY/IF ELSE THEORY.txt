						if
if (<переменная/значение> {знак} <переменная/ответ>) alert("Вывод!"); //вместо алерта можно вставить любое другое дес
или
if (<переменная/значение> {знак} <переменная/ответ>)
{
...
}

	 Оператор if (...) вычисляет и преобразует выражение в скобках к логическому типу.
	В логическом контексте:
	 Число 0, пустая строка "", null и undefined, а также NaN являются false,
	Остальные значения – true.

 При невыполнении условия используется конструкция else:
if (<переменная/значение> {знак} <переменная/ответ>)
{
...
}
else
{
...
}

	Бывает нужно проверить несколько вариантов условия. Для этого используется блок else if .... Например:
if (<переменная/значение> {знак} <переменная/ответ>)
{
...
}
else if (<переменная/значение> {знак} <переменная/ответ>)
{
...
} else
{
...
}

	Иногда нужно в зависимости от условия присвоить переменную. Например:
var access;
var age = prompt('Сколько вам лет?', '');

if (age > 14) {
  access = true;
} else {
  access = false;
}

alert(access);

	Оператор вопросительный знак '?' позволяет делать это короче и проще.

 Он состоит из трех частей:
условие ? значение1 : значение2

	Проверяется условие, затем если оно верно – возвращается значение1, если неверно – значение2, например:
access = (age > 14) ? true : false;

	Оператор '?' выполняется позже большинства других, в частности – позже сравнений, поэтому скобки можно не ставить:
access = age > 14 ? true : false; //access = age > 14; В данном случае можно было бы обойтись и без оператора '?', т.к. сравнение само по себе уже возвращает true/false:

				«Тернарный оператор»
Вопросительный знак – единственный оператор, у которого есть аж три аргумента, в то время как у обычных операторов их один-два. Поэтому его называют «тернарный оператор».

var age = prompt('возраст?', 18);
var message = (age < 3) ? 'Здравствуй, малыш!' :
  (age < 18) ? 'Привет!' :
  (age < 100) ? 'Здравствуйте!' :
  'Какой необычный возраст!';
alert( message );

	Поначалу может быть сложно понять, что происходит. Однако, внимательно приглядевшись, мы замечаем, что это обычная последовательная проверка!

 Вопросительный знак проверяет сначала age < 3, если верно – возвращает 'Здравствуй, малыш!', если нет – идет за двоеточие и проверяет age < 18. Если это верно – возвращает 'Привет!', иначе проверка age < 100 и 'Здравствуйте!'… И наконец, если ничего из этого не верно, то 'Какой необычный возраст!'.

То же самое через if..else:

if (age < 3) {
  message = 'Здравствуй, малыш!';
} else if (age < 18) {
  message = 'Привет!';
} else if (age < 100) {
  message = 'Здравствуйте!';
} else {
  message = 'Какой необычный возраст!';
}

	Нетрадиционное использование „?“
Иногда оператор вопросительный знак '?' используют как замену if:

var company = prompt('Какая компания создала JavaScript?', '');
(company == 'Netscape') ?
   alert('Да, верно') : alert('Неправильно');

Работает это так: в зависимости от условия, будет выполнена либо первая, либо вторая часть после '?'.

Результат выполнения не присваивается в переменную, так что пропадёт (впрочем, alert ничего не возвращает).

Рекомендуется не использовать вопросительный знак таким образом.

Несмотря на то, что с виду такая запись короче if, она является существенно менее читаемой.

Вот, для сравнения, то же самое с if:
var company = prompt('Какая компания создала JavaScript?', '');

if (company == 'Netscape') {
  alert('Да, верно');
} else {
  alert('Неправильно');
}